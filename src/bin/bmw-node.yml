name: bmw-node
about: Hard fork of BTC UTXO set into a mimblewimble application
author: The BMW Developers

args:
  - testnet:
      help: Run bmw-node against the Testnet (as opposed to mainnet)
      long: testnet
      takes_value: false
  - usernet:
      help: Run bmw-node as a local-only network. Doesn't block peer connections but will not connect to any peer or seed
      long: usernet
      takes_value: false
subcommands:
  - clean:
      about: Clean BMW chain data
  - server:
      about: Control the BMW server
      args:
        - config_file:
            help: Path to a bmw-server.toml configuration file
            short: c
            long: config_file
            takes_value: true
        - port:
            help: Port to start the P2P server on
            short: p
            long: port
            takes_value: true
        - api_port:
            help: Port on which to start the api server (e.g. transaction pool api)
            short: api
            long: api_port
            takes_value: true
        - seed:
            help: Override seed node(s) to connect to
            short: s
            long: seed
            takes_value: true
        - wallet_url:
            help: The wallet listener to which mining rewards will be sent
            short: w
            long: wallet_url
            takes_value: true
      subcommands:
        - config:
            about: Generate a configuration bmw-server.toml file in the current directory
        - run:
            about: Run the BMW server in this console
  - client:
      about: Communicates with the BMW server
      subcommands:
        - status:
            about: Current status of the BMW chain
        - listconnectedpeers:
            about: Print a list of currently connected peers
        - ban:
            about: Ban peer
            args:
              - peer:
                  help: Peer ip and port (e.g. 10.12.12.13:13414)
                  short: p
                  long: peer
                  required: true
                  takes_value: true
        - unban:
            about: Unban peer
            args:
              - peer:
                  help: Peer ip and port (e.g. 10.12.12.13:13414)
                  short: p
                  long: peer
                  required: true
                  takes_value: true
